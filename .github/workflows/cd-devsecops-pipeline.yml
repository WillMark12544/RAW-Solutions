name: CD (Deploy Docker Artifact to Azure)

on:
  workflow_run:
    workflows: ["CI DevSecOps Pipeline"]
    types: [completed]
    branches: [master]
  workflow_dispatch: {}

jobs:
  deploy-to-azure:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      actions: read   # ✅ allows API download of artifacts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Download artifact directly from the CI run using GitHub API
      - name: Download Docker image artifact from CI run
        run: |
          echo "Fetching artifact from CI run ID: ${{ github.event.workflow_run.id }}"
          curl -sL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/artifacts" \
            | jq -r '.artifacts[] | select(.name=="notes-webapp-image") | .archive_download_url' > url.txt

          ARTIFACT_URL=$(cat url.txt)
          if [ -z "$ARTIFACT_URL" ]; then
            echo "❌ Artifact 'notes-webapp-image' not found in CI run!"
            exit 1
          fi

          echo "Downloading artifact from $ARTIFACT_URL"
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o artifact.zip "$ARTIFACT_URL"

          mkdir -p ./image && unzip -q artifact.zip -d ./image

      - name: Load Docker image
        run: docker load -i ./image/notes_web_app.tar

      - name: Tag Docker image
        run: docker tag notes_web_app:latest notes_web_app:release

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.rawsolutions }}
          images: notes_web_app:release

      - name: Restart Web App
        run: az webapp restart \
             --name ${{ secrets.rawsolutions }} \
             --resource-group ${{ secrets.rawsolutions_group }}

      - name: Health Check
        run: |
          for i in {1..30}; do
            if curl -sf ${{ secrets.rawsolutions-h6bkfhb7c3htcxhw.newzealandnorth-01.azurewebsites.net }}/health; then
              echo "✅ App is healthy!"
              exit 0
            fi
            echo "Waiting for app..."
            sleep 5
          done
          echo "❌ App failed health check" && exit 1
